{{ $basePath := "data/gzipped/" }}
{{ range $fileNum := seq 1 100 }}
  {{ $filePath := printf "%s%d.json" $basePath $fileNum }}
  {{ $dataName := string $fileNum }}
  
  {{ if fileExists $filePath }}
    {{ $fileContent := readFile $filePath }}
    
    {{/* Attempt to unmarshal with error handling */}}
    {{ $data := dict }}
    {{ with transform.Unmarshal $fileContent }}
      {{ $data = . }}
    {{ else }}
      {{ warnf "Skipping problematic file (failed to unmarshal): %s" $filePath }}
      {{ continue }}
    {{ end }}
    
    {{ if $data.chapters }}
      {{ range $index, $section := $data.chapters }}
        {{/* Process content with safeHTML to preserve special chars */}}
        {{ $content := $section.content 
                      | replaceRE `\\r\\n` "\n"  
                      | replaceRE `\r\n` "\n"   
                      | replaceRE `\n+` "\n\n"
                      | safeHTML
                  }}
                  
        {{ $page := dict
          "content" (dict "mediaType" "text/markdown" "value" $content)
          "kind" "page"
          "params" (dict 
            "title" $section.title
            "chapter" (add $index 1)
            "id" $dataName
            "novel_id" $dataName
          )
          "path" (printf "%s/%d" $dataName (add $index 1))
          "title" $section.title
        }}
        {{ $.AddPage $page }}
      {{ end }}
    {{ end }}
  {{ else }}
    {{/* Silent break when file doesn't exist */}}
    {{ break }}
  {{ end }}
{{ end }}
