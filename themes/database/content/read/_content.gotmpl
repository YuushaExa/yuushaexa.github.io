{{ $novelUrls := dict
  "帝霸" "https://github.com/YuushaExa/novels-end/raw/main/result/%E5%B8%9D%E9%9C%B8.json"
  "novel2" "https://example.com/novel2.json"
  "novel3" "https://example.com/novel3.json"
  "novel4" "https://example.com/novel4.json"
  "novel5" "https://example.com/novel5.json"
}}

{{ range $novelId, $url := $novelUrls }}
  {{ $remoteData := resources.GetRemote $url }}
  {{ if $remoteData }}
    {{ $cleanJson := $remoteData.Content 
      | replace `，"` `,"`  
      | replace `\r\n` `\n` 
      | replace `\\"` `\"`
    }}
    
    {{ $data := transform.Unmarshal $cleanJson }}
    
    {{ if and $data $data.chapters }}
      {{ range $index, $section := $data.chapters }}
        {{ $content := $section.content 
          | replaceRE `\\r\\n` "\n"  
          | replaceRE `\r\n` "\n"   
          | replaceRE `\n+` "\n\n"
          | replace `，"` `,"`
        }}
        
        {{ $page := dict
          "content" (dict "mediaType" "text/markdown" "value" $content)
          "kind" "page"
          "params" (dict 
            "title" (default (printf "Chapter %d" (add $index 1)) $section.title)
            "chapter" (add $index 1)
            "id" $novelId
            "novel_id" $novelId
          )
          "path" (printf "%s/%d" $novelId (add $index 1))
          "title" (default (printf "Chapter %d" (add $index 1)) $section.title)
        }}
        {{ $.AddPage $page }}
      {{ end }}
    {{ else }}
      {{ warnf "Invalid JSON structure in %s" $url }}
    {{ end }}
  {{ else }}
    {{ warnf "Failed to fetch: %s" $url }}
  {{ end }}
{{ end }}
